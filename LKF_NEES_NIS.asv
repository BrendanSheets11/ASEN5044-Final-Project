
%% NEES/NIS Testing
load('Rtrue.csv');
load('Qtrue.csv');

R = 1e9*Rtrue;
P_plus = 10*[[1 0 0 0];
            [0 0.001 0 0];
            [0 0 1 0];
            [0 0 0 0.001]]; %initial state error covariance matrix

alpha=0.05;
tuner = 1000;%logspace(-5,5,20);
for j=1:length(tuner)
    
    Q = tuner(j)*Qtrue;

    Eps_x = zeros(length(x_true)-1,1);
    Eps_bar_x = zeros(length(x_true)-1,1);
    
    for N=1:30
        [x_true,ydata] = SimulateData(Qtrue,Rtrue,P_plus,xnom0,dt,num_points);
        [dX_LKF, X_LKF, sigma_LKF,P_k] = LKFfunc(ydata,Q,R,P_plus,dx_plus);
        e_x = x_true - X_LKF;
        for i=1:length(e_x)-1
            Eps_x(i) = e_x(:,i)'*((P_k)\e_x(:,i));
            Eps_bar_x(i) = Eps_x(i)+Eps_bar_x(i);
        end
        
    end
    Eps_bar_x = Eps_bar_x/N;
    Eps_bar_x_avg = sum(Eps_bar_x)/length(Eps_bar_x);
    
    Eps_Q_test(j) = Eps_bar_x_avg;

    r1 = chi2inv(alpha/2,N*4)./N;
    r2 = chi2inv(1-alpha/2,N*4)./N;

    num_passes = 0;

    for Eps_barx_k = Eps_bar_x'
        if (N*Eps_barx_k >= r1*N) && (N*Eps_barx_k <= r2*N)
            num_passes = num_passes+1;
        end
    end

    proportion_failed = 1 - num_passes/num_points;

    if proportion_failed < alpha
        disp("KF passes chi-square test for Q:")
        disp(Q)
    end
    
    figure()
    hold on
    plot(Eps_bar_x,"bo")
    plot(r1*ones(size(Eps_bar_x)),"b--")
    plot(r2*ones(size(Eps_bar_x)),"b--")
    
%     if (N*Eps_bar_x_avg >= r1*N) && (N*Eps_bar_x_avg <= r2*N)
%         disp("KF passes chi-square test for Q:")
%         disp(Q)
%     end
end

